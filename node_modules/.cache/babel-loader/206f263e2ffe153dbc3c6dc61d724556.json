{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.drawContent = void 0;\n/**\n * Shared function to draw horizontal borders, rows or the entire table\n */\n\nvar drawContent = function drawContent(contents, separatorConfig) {\n  var separatorGetter = separatorConfig.separatorGetter,\n      drawSeparator = separatorConfig.drawSeparator;\n  var contentSize = contents.length;\n  var result = [];\n\n  if (drawSeparator(0, contentSize)) {\n    result.push(separatorGetter(0, contentSize));\n  }\n\n  contents.forEach(function (content, contentIndex) {\n    result.push(content); // Only append the middle separator if the content is not the last\n\n    if (contentIndex + 1 < contentSize && drawSeparator(contentIndex + 1, contentSize)) {\n      result.push(separatorGetter(contentIndex + 1, contentSize));\n    }\n  });\n\n  if (drawSeparator(contentSize, contentSize)) {\n    result.push(separatorGetter(contentSize, contentSize));\n  }\n\n  return result.join('');\n};\n\nexports.drawContent = drawContent;","map":{"version":3,"sources":["C:/Users/dikra/Downloads/paper-dashboard-react-main/paper-dashboard-react-main/node_modules/table/dist/src/drawContent.js"],"names":["Object","defineProperty","exports","value","drawContent","contents","separatorConfig","separatorGetter","drawSeparator","contentSize","length","result","push","forEach","content","contentIndex","join"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,WAAR,GAAsB,KAAK,CAA3B;AACA;AACA;AACA;;AACA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAWC,eAAX,EAA+B;AAC/C,MAAQC,eAAR,GAA2CD,eAA3C,CAAQC,eAAR;AAAA,MAAyBC,aAAzB,GAA2CF,eAA3C,CAAyBE,aAAzB;AACA,MAAMC,WAAW,GAAGJ,QAAQ,CAACK,MAA7B;AACA,MAAMC,MAAM,GAAG,EAAf;;AACA,MAAIH,aAAa,CAAC,CAAD,EAAIC,WAAJ,CAAjB,EAAmC;AAC/BE,IAAAA,MAAM,CAACC,IAAP,CAAYL,eAAe,CAAC,CAAD,EAAIE,WAAJ,CAA3B;AACH;;AACDJ,EAAAA,QAAQ,CAACQ,OAAT,CAAiB,UAACC,OAAD,EAAUC,YAAV,EAA2B;AACxCJ,IAAAA,MAAM,CAACC,IAAP,CAAYE,OAAZ,EADwC,CAExC;;AACA,QAAIC,YAAY,GAAG,CAAf,GAAmBN,WAAnB,IAAkCD,aAAa,CAACO,YAAY,GAAG,CAAhB,EAAmBN,WAAnB,CAAnD,EAAoF;AAChFE,MAAAA,MAAM,CAACC,IAAP,CAAYL,eAAe,CAACQ,YAAY,GAAG,CAAhB,EAAmBN,WAAnB,CAA3B;AACH;AACJ,GAND;;AAOA,MAAID,aAAa,CAACC,WAAD,EAAcA,WAAd,CAAjB,EAA6C;AACzCE,IAAAA,MAAM,CAACC,IAAP,CAAYL,eAAe,CAACE,WAAD,EAAcA,WAAd,CAA3B;AACH;;AACD,SAAOE,MAAM,CAACK,IAAP,CAAY,EAAZ,CAAP;AACH,CAlBD;;AAmBAd,OAAO,CAACE,WAAR,GAAsBA,WAAtB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.drawContent = void 0;\n/**\n * Shared function to draw horizontal borders, rows or the entire table\n */\nconst drawContent = (contents, separatorConfig) => {\n    const { separatorGetter, drawSeparator } = separatorConfig;\n    const contentSize = contents.length;\n    const result = [];\n    if (drawSeparator(0, contentSize)) {\n        result.push(separatorGetter(0, contentSize));\n    }\n    contents.forEach((content, contentIndex) => {\n        result.push(content);\n        // Only append the middle separator if the content is not the last\n        if (contentIndex + 1 < contentSize && drawSeparator(contentIndex + 1, contentSize)) {\n            result.push(separatorGetter(contentIndex + 1, contentSize));\n        }\n    });\n    if (drawSeparator(contentSize, contentSize)) {\n        result.push(separatorGetter(contentSize, contentSize));\n    }\n    return result.join('');\n};\nexports.drawContent = drawContent;\n//# sourceMappingURL=drawContent.js.map"]},"metadata":{},"sourceType":"script"}