{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"C:\\\\Users\\\\aousw\\\\Desktop\\\\React\\\\paper-dashboard-react-main\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\objectSpread2.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.drawHeader = void 0;\n\nvar alignString_1 = require(\"./alignString\");\n\nvar drawRow_1 = require(\"./drawRow\");\n\nvar padTableData_1 = require(\"./padTableData\");\n\nvar truncateTableData_1 = require(\"./truncateTableData\");\n\nvar wrapCell_1 = require(\"./wrapCell\");\n\nvar drawHeader = function drawHeader(width, config) {\n  if (!config.header) {\n    throw new Error('Can not draw header without header configuration');\n  }\n\n  var _config$header = config.header,\n      alignment = _config$header.alignment,\n      paddingRight = _config$header.paddingRight,\n      paddingLeft = _config$header.paddingLeft,\n      wrapWord = _config$header.wrapWord;\n  var content = config.header.content;\n  content = (0, truncateTableData_1.truncateString)(content, config.header.truncate);\n  var headerLines = (0, wrapCell_1.wrapCell)(content, width, wrapWord);\n  return headerLines.map(function (headerLine) {\n    var line = (0, alignString_1.alignString)(headerLine, width, alignment);\n    line = (0, padTableData_1.padString)(line, paddingLeft, paddingRight);\n    return (0, drawRow_1.drawRow)([line], _objectSpread(_objectSpread({}, config), {}, {\n      drawVerticalLine: function drawVerticalLine(index) {\n        var columnCount = config.columns.length;\n        return config.drawVerticalLine(index === 0 ? 0 : columnCount, columnCount);\n      }\n    }));\n  }).join('');\n};\n\nexports.drawHeader = drawHeader;","map":{"version":3,"sources":["C:/Users/aousw/Desktop/React/paper-dashboard-react-main/node_modules/table/dist/src/drawHeader.js"],"names":["Object","defineProperty","exports","value","drawHeader","alignString_1","require","drawRow_1","padTableData_1","truncateTableData_1","wrapCell_1","width","config","header","Error","alignment","paddingRight","paddingLeft","wrapWord","content","truncateString","truncate","headerLines","wrapCell","map","headerLine","line","alignString","padString","drawRow","drawVerticalLine","index","columnCount","columns","length","join"],"mappings":"AAAA;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,UAAR,GAAqB,KAAK,CAA1B;;AACA,IAAMC,aAAa,GAAGC,OAAO,CAAC,eAAD,CAA7B;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAME,cAAc,GAAGF,OAAO,CAAC,gBAAD,CAA9B;;AACA,IAAMG,mBAAmB,GAAGH,OAAO,CAAC,qBAAD,CAAnC;;AACA,IAAMI,UAAU,GAAGJ,OAAO,CAAC,YAAD,CAA1B;;AACA,IAAMF,UAAU,GAAG,SAAbA,UAAa,CAACO,KAAD,EAAQC,MAAR,EAAmB;AAClC,MAAI,CAACA,MAAM,CAACC,MAAZ,EAAoB;AAChB,UAAM,IAAIC,KAAJ,CAAU,kDAAV,CAAN;AACH;;AACD,uBAA2DF,MAAM,CAACC,MAAlE;AAAA,MAAQE,SAAR,kBAAQA,SAAR;AAAA,MAAmBC,YAAnB,kBAAmBA,YAAnB;AAAA,MAAiCC,WAAjC,kBAAiCA,WAAjC;AAAA,MAA8CC,QAA9C,kBAA8CA,QAA9C;AACA,MAAMC,OAAN,GAAkBP,MAAM,CAACC,MAAzB,CAAMM,OAAN;AACAA,EAAAA,OAAO,GAAG,CAAC,GAAGV,mBAAmB,CAACW,cAAxB,EAAwCD,OAAxC,EAAiDP,MAAM,CAACC,MAAP,CAAcQ,QAA/D,CAAV;AACA,MAAMC,WAAW,GAAG,CAAC,GAAGZ,UAAU,CAACa,QAAf,EAAyBJ,OAAzB,EAAkCR,KAAlC,EAAyCO,QAAzC,CAApB;AACA,SAAOI,WAAW,CAACE,GAAZ,CAAgB,UAACC,UAAD,EAAgB;AACnC,QAAIC,IAAI,GAAG,CAAC,GAAGrB,aAAa,CAACsB,WAAlB,EAA+BF,UAA/B,EAA2Cd,KAA3C,EAAkDI,SAAlD,CAAX;AACAW,IAAAA,IAAI,GAAG,CAAC,GAAGlB,cAAc,CAACoB,SAAnB,EAA8BF,IAA9B,EAAoCT,WAApC,EAAiDD,YAAjD,CAAP;AACA,WAAO,CAAC,GAAGT,SAAS,CAACsB,OAAd,EAAuB,CAACH,IAAD,CAAvB,kCACAd,MADA;AAEHkB,MAAAA,gBAAgB,EAAE,0BAACC,KAAD,EAAW;AACzB,YAAMC,WAAW,GAAGpB,MAAM,CAACqB,OAAP,CAAeC,MAAnC;AACA,eAAOtB,MAAM,CAACkB,gBAAP,CAAwBC,KAAK,KAAK,CAAV,GAAc,CAAd,GAAkBC,WAA1C,EAAuDA,WAAvD,CAAP;AACH;AALE,OAAP;AAOH,GAVM,EAUJG,IAVI,CAUC,EAVD,CAAP;AAWH,CAnBD;;AAoBAjC,OAAO,CAACE,UAAR,GAAqBA,UAArB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.drawHeader = void 0;\nconst alignString_1 = require(\"./alignString\");\nconst drawRow_1 = require(\"./drawRow\");\nconst padTableData_1 = require(\"./padTableData\");\nconst truncateTableData_1 = require(\"./truncateTableData\");\nconst wrapCell_1 = require(\"./wrapCell\");\nconst drawHeader = (width, config) => {\n    if (!config.header) {\n        throw new Error('Can not draw header without header configuration');\n    }\n    const { alignment, paddingRight, paddingLeft, wrapWord } = config.header;\n    let { content } = config.header;\n    content = (0, truncateTableData_1.truncateString)(content, config.header.truncate);\n    const headerLines = (0, wrapCell_1.wrapCell)(content, width, wrapWord);\n    return headerLines.map((headerLine) => {\n        let line = (0, alignString_1.alignString)(headerLine, width, alignment);\n        line = (0, padTableData_1.padString)(line, paddingLeft, paddingRight);\n        return (0, drawRow_1.drawRow)([line], {\n            ...config,\n            drawVerticalLine: (index) => {\n                const columnCount = config.columns.length;\n                return config.drawVerticalLine(index === 0 ? 0 : columnCount, columnCount);\n            },\n        });\n    }).join('');\n};\nexports.drawHeader = drawHeader;\n//# sourceMappingURL=drawHeader.js.map"]},"metadata":{},"sourceType":"script"}