{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"C:\\\\Users\\\\dikra\\\\Downloads\\\\paper-dashboard-react-main\\\\paper-dashboard-react-main\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\objectSpread2.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeStreamConfig = void 0;\n\nvar utils_1 = require(\"./utils\");\n\nvar validateConfig_1 = require(\"./validateConfig\");\n/**\n * Creates a configuration for every column using default\n * values for the missing configuration properties.\n */\n\n\nvar makeColumnsConfig = function makeColumnsConfig(columnCount) {\n  var columns = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var columnDefault = arguments.length > 2 ? arguments[2] : undefined;\n  return Array.from({\n    length: columnCount\n  }).map(function (_, index) {\n    return _objectSpread(_objectSpread({\n      alignment: 'left',\n      paddingLeft: 1,\n      paddingRight: 1,\n      truncate: Number.POSITIVE_INFINITY,\n      verticalAlignment: 'top',\n      wrapWord: false\n    }, columnDefault), columns[index]);\n  });\n};\n/**\n * Makes a new configuration object out of the userConfig object\n * using default values for the missing configuration properties.\n */\n\n\nvar makeStreamConfig = function makeStreamConfig(config) {\n  (0, validateConfig_1.validateConfig)('streamConfig.json', config);\n\n  if (config.columnDefault.width === undefined) {\n    throw new Error('Must provide config.columnDefault.width when creating a stream.');\n  }\n\n  return _objectSpread(_objectSpread({\n    drawVerticalLine: function drawVerticalLine() {\n      return true;\n    }\n  }, config), {}, {\n    border: (0, utils_1.makeBorderConfig)(config.border),\n    columns: makeColumnsConfig(config.columnCount, config.columns, config.columnDefault)\n  });\n};\n\nexports.makeStreamConfig = makeStreamConfig;","map":{"version":3,"sources":["C:/Users/dikra/Downloads/paper-dashboard-react-main/paper-dashboard-react-main/node_modules/table/dist/src/makeStreamConfig.js"],"names":["Object","defineProperty","exports","value","makeStreamConfig","utils_1","require","validateConfig_1","makeColumnsConfig","columnCount","columns","columnDefault","Array","from","length","map","_","index","alignment","paddingLeft","paddingRight","truncate","Number","POSITIVE_INFINITY","verticalAlignment","wrapWord","config","validateConfig","width","undefined","Error","drawVerticalLine","border","makeBorderConfig"],"mappings":"AAAA;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,gBAAR,GAA2B,KAAK,CAAhC;;AACA,IAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,gBAAgB,GAAGD,OAAO,CAAC,kBAAD,CAAhC;AACA;AACA;AACA;AACA;;;AACA,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,WAAD,EAA8C;AAAA,MAAhCC,OAAgC,uEAAtB,EAAsB;AAAA,MAAlBC,aAAkB;AACpE,SAAOC,KAAK,CAACC,IAAN,CAAW;AAAEC,IAAAA,MAAM,EAAEL;AAAV,GAAX,EAAoCM,GAApC,CAAwC,UAACC,CAAD,EAAIC,KAAJ,EAAc;AACzD;AACIC,MAAAA,SAAS,EAAE,MADf;AAEIC,MAAAA,WAAW,EAAE,CAFjB;AAGIC,MAAAA,YAAY,EAAE,CAHlB;AAIIC,MAAAA,QAAQ,EAAEC,MAAM,CAACC,iBAJrB;AAKIC,MAAAA,iBAAiB,EAAE,KALvB;AAMIC,MAAAA,QAAQ,EAAE;AANd,OAOOd,aAPP,GAQOD,OAAO,CAACO,KAAD,CARd;AAUH,GAXM,CAAP;AAYH,CAbD;AAcA;AACA;AACA;AACA;;;AACA,IAAMb,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACsB,MAAD,EAAY;AACjC,GAAC,GAAGnB,gBAAgB,CAACoB,cAArB,EAAqC,mBAArC,EAA0DD,MAA1D;;AACA,MAAIA,MAAM,CAACf,aAAP,CAAqBiB,KAArB,KAA+BC,SAAnC,EAA8C;AAC1C,UAAM,IAAIC,KAAJ,CAAU,iEAAV,CAAN;AACH;;AACD;AACIC,IAAAA,gBAAgB,EAAE,4BAAM;AACpB,aAAO,IAAP;AACH;AAHL,KAIOL,MAJP;AAKIM,IAAAA,MAAM,EAAE,CAAC,GAAG3B,OAAO,CAAC4B,gBAAZ,EAA8BP,MAAM,CAACM,MAArC,CALZ;AAMItB,IAAAA,OAAO,EAAEF,iBAAiB,CAACkB,MAAM,CAACjB,WAAR,EAAqBiB,MAAM,CAAChB,OAA5B,EAAqCgB,MAAM,CAACf,aAA5C;AAN9B;AAQH,CAbD;;AAcAT,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeStreamConfig = void 0;\nconst utils_1 = require(\"./utils\");\nconst validateConfig_1 = require(\"./validateConfig\");\n/**\n * Creates a configuration for every column using default\n * values for the missing configuration properties.\n */\nconst makeColumnsConfig = (columnCount, columns = {}, columnDefault) => {\n    return Array.from({ length: columnCount }).map((_, index) => {\n        return {\n            alignment: 'left',\n            paddingLeft: 1,\n            paddingRight: 1,\n            truncate: Number.POSITIVE_INFINITY,\n            verticalAlignment: 'top',\n            wrapWord: false,\n            ...columnDefault,\n            ...columns[index],\n        };\n    });\n};\n/**\n * Makes a new configuration object out of the userConfig object\n * using default values for the missing configuration properties.\n */\nconst makeStreamConfig = (config) => {\n    (0, validateConfig_1.validateConfig)('streamConfig.json', config);\n    if (config.columnDefault.width === undefined) {\n        throw new Error('Must provide config.columnDefault.width when creating a stream.');\n    }\n    return {\n        drawVerticalLine: () => {\n            return true;\n        },\n        ...config,\n        border: (0, utils_1.makeBorderConfig)(config.border),\n        columns: makeColumnsConfig(config.columnCount, config.columns, config.columnDefault),\n    };\n};\nexports.makeStreamConfig = makeStreamConfig;\n//# sourceMappingURL=makeStreamConfig.js.map"]},"metadata":{},"sourceType":"script"}